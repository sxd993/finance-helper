import { useState } from 'react';
import { PlusIcon, WalletIcon } from '../shared/ui/icons/IconComponents';
import { ConvertCard } from '../shared/ui/ConvertCard';
import { useMockConverts } from '../shared/hooks/useMockConverts';

export function ConvertsPage() {
  const [showAddModal, setShowAddModal] = useState(false);
  const [weeklyBudget] = useState(25000);

  const { converts, isLoading } = useMockConverts();
  console.log(converts)

  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤
  const convertsArray = Array.isArray(converts) ? converts : [];
  console.log(converts)

  // –í—ã—á–∏—Å–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const totalAllocated = convertsArray.reduce((sum, convert) => {
    if (convert.convert_type === 'necessary' || convert.convert_type === 'desire') {
      return sum + (convert.limit_amount || 0);
    }
    return sum;
  }, 0);

  const budgetUtilization = (totalAllocated / weeklyBudget) * 100;
  const remainingBudget = weeklyBudget - totalAllocated;

  if (isLoading) {
    return (
      <div className="pb-16">
        <div className="mx-4 mt-6">
          <div className="animate-pulse">
            <div className="h-32 bg-gray-200 rounded-2xl mb-6"></div>
            <div className="space-y-3">
              <div className="h-20 bg-gray-200 rounded-lg"></div>
              <div className="h-20 bg-gray-200 rounded-lg"></div>
              <div className="h-20 bg-gray-200 rounded-lg"></div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç—ã –ø–æ —Ç–∏–ø–∞–º
  const basicConverts = convertsArray.filter(c => c.convert_type === 'necessary');
  const desireConverts = convertsArray.filter(c => c.convert_type === 'desire');
  const savingConverts = convertsArray.filter(c => c.convert_type === 'saving');
  const investmentConverts = convertsArray.filter(c => c.convert_type === 'investment');

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Å—Å–∏–≤—ã
  const goalEnvelopes = [...desireConverts, ...savingConverts];
  const investmentEnvelopes = investmentConverts;

  return (
    <div className="pb-16">
      <div className="mx-4 mt-6">
        {/* –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç */}
        <div className="bg-gradient-to-r from-blue-500 to-blue-600 rounded-2xl p-5 mb-6 text-white">
          <div className="flex items-center space-x-2 mb-3">
            <WalletIcon className="w-5 h-5" />
            <span className="text-blue-100">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç</span>
          </div>

          <div className="mb-4">
            <div className="text-2xl mb-1">{weeklyBudget.toLocaleString('ru-RU')} ‚ÇΩ</div>
            <div className="text-blue-100 text-sm">25 –∞–≤–≥—É—Å—Ç–∞ - 1 —Å–µ–Ω—Ç—è–±—Ä—è</div>
          </div>

          <div className="space-y-3">
            <div className="flex justify-between text-sm">
              <span className="text-blue-100">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –ø–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞–º</span>
              <span>{totalAllocated.toLocaleString('ru-RU')} ‚ÇΩ</span>
            </div>

            <div className="w-full bg-white/20 rounded-full h-2">
              <div
                className="h-2 bg-white rounded-full transition-all duration-300"
                style={{ width: `${Math.min(budgetUtilization, 100)}%` }}
              />
            </div>

            <div className="flex justify-between text-sm">
              <span className={remainingBudget >= 0 ? 'text-green-200' : 'text-red-200'}>
                {remainingBudget >= 0 ? '–î–æ—Å—Ç—É–ø–Ω–æ' : '–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ'}
              </span>
              <span className={remainingBudget >= 0 ? 'text-green-200' : 'text-red-200'}>
                {Math.abs(remainingBudget).toLocaleString('ru-RU')} ‚ÇΩ
              </span>
            </div>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã</h3>
            <button
              onClick={() => setShowAddModal(true)}
              disabled={remainingBudget <= 0}
              className={`p-2 ${remainingBudget > 0 ? 'text-orange-500 hover:text-orange-600' : 'text-gray-400'}`}
            >
              <PlusIcon className="w-5 h-5" />
            </button>
          </div>
          <p className="text-sm text-gray-500 mb-4">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é</p>

          <div className="space-y-3">
            {basicConverts.map(convert => (
              <ConvertCard key={convert.id} convert={convert} />
            ))}
          </div>
        </div>

        {/* –¶–µ–ª–∏ */}
        <div className="mb-8">
          <div className="bg-gray-50 rounded-2xl p-4 mb-4">
            <div className="flex items-center justify-between mb-2">
              <h4 className="font-medium">–°–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —Ü–µ–ª–µ–π</h4>
              <span className="text-lg text-green-600 font-semibold">
                {Math.max(0, remainingBudget * 4).toLocaleString('ru-RU')} ‚ÇΩ/–º–µ—Å
              </span>
            </div>
            <p className="text-sm text-gray-500">
              –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ç—Ä–∞—Ç –º–æ–∂–Ω–æ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏
            </p>
          </div>

          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold">–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏</h3>
            <button
              onClick={() => setShowAddModal(true)}
              className="p-2 text-orange-500 hover:text-orange-600"
            >
              <PlusIcon className="w-5 h-5" />
            </button>
          </div>
          <p className="text-sm text-gray-500 mb-4">–ì–∏–±–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –∏–∑ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤</p>

          <div className="space-y-3">
            {goalEnvelopes.map(convert => (
              <ConvertCard key={convert.id} convert={convert} />
            ))}
          </div>
        </div>

        {/* –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª–∏</h3>
            <button
              onClick={() => setShowAddModal(true)}
              className="p-2 text-orange-500 hover:text-orange-600"
            >
              <PlusIcon className="w-5 h-5" />
            </button>
          </div>
          <p className="text-sm text-gray-500 mb-4">–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è</p>

          <div className="space-y-3">
            {investmentEnvelopes.map(convert => (
              <ConvertCard key={convert.id} convert={convert} />
            ))}
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
      {showAddModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-2xl p-6 w-full max-w-sm">
            <h3 className="text-lg font-semibold mb-4">–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç</h3>
            {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞ */}
            <div className="space-y-4">
              <div>
                <label className="block text-sm text-gray-500 mb-1">–¢–∏–ø</label>
                <select className="w-full px-3 py-2 bg-gray-50 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-orange-500">
                  <option value="necessary">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç</option>
                  <option value="desire">–ñ–µ–ª–∞–Ω–∏—è</option>
                  <option value="saving">–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è</option>
                  <option value="investment">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</option>
                </select>
              </div>

              <div>
                <label className="block text-sm text-gray-500 mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
                <input
                  type="text"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –û–¥–µ–∂–¥–∞"
                  className="w-full px-3 py-2 bg-gray-50 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-orange-500"
                />
              </div>

              <div>
                <label className="block text-sm text-gray-500 mb-1">–õ–∏–º–∏—Ç/–¶–µ–ª—å</label>
                <input
                  type="number"
                  placeholder="5000"
                  className="w-full px-3 py-2 bg-gray-50 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-orange-500"
                />
              </div>

              <div className="bg-orange-50 p-3 rounded-lg">
                <div className="text-sm text-orange-700">
                  üí° –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–æ–ª–Ω—è—é—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é.
                  –¶–µ–ª–∏ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –ø–æ–ø–æ–ª–Ω—è—é—Ç—Å—è –∏–∑ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –≤–∞—à–µ–º—É –∂–µ–ª–∞–Ω–∏—é.
                </div>
              </div>
            </div>

            <div className="flex space-x-3 mt-6">
              <button
                onClick={() => setShowAddModal(false)}
                className="flex-1 bg-gray-200 text-gray-700 py-3 rounded-xl hover:bg-gray-300 transition-colors"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={() => setShowAddModal(false)}
                className="flex-1 bg-orange-500 text-white py-3 rounded-xl hover:bg-orange-600 transition-colors"
              >
                –°–æ–∑–¥–∞—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
